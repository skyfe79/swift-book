{"primaryContentSections":[{"content":[{"inlineContent":[{"text":"클래스, 구조체, 열거형은 ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"서브스크립트"}]},{"type":"text","text":"를 정의할 수 있다. 서브스크립트는 컬렉션, 리스트, 시퀀스의 멤버 요소에 접근하기 위한 단축 경로 역할을 한다. 별도의 메서드를 사용하지 않고도 인덱스를 통해 값을 설정하거나 가져올 수 있다. 예를 들어, "},{"code":"Array","type":"codeVoice"},{"text":" 인스턴스의 요소는 ","type":"text"},{"code":"someArray[index]","type":"codeVoice"},{"type":"text","text":"로, "},{"code":"Dictionary","type":"codeVoice"},{"text":" 인스턴스의 요소는 ","type":"text"},{"type":"codeVoice","code":"someDictionary[key]"},{"type":"text","text":"로 접근한다."}],"type":"paragraph"},{"inlineContent":[{"text":"하나의 타입에 여러 서브스크립트를 정의할 수 있다. 서브스크립트에 전달하는 인덱스 값의 타입에 따라 적절한 서브스크립트 오버로드가 선택된다. 서브스크립트는 단일 차원에 국한되지 않으며, 커스텀 타입의 필요에 따라 여러 입력 매개변수를 가진 서브스크립트를 정의할 수도 있다.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"%EC%84%9C%EB%B8%8C%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B5%AC%EB%AC%B8","text":"서브스크립트 구문"},{"type":"paragraph","inlineContent":[{"text":"서브스크립트를 사용하면 타입의 인스턴스를 대괄호 안에 하나 이상의 값을 넣어 쿼리할 수 있다. 이 구문은 인스턴스 메서드와 계산 프로퍼티 구문과 유사하다. 서브스크립트를 정의할 때는 ","type":"text"},{"type":"codeVoice","code":"subscript"},{"type":"text","text":" 키워드를 사용하며, 인스턴스 메서드와 동일한 방식으로 하나 이상의 입력 매개변수와 반환 타입을 지정한다. 단, 인스턴스 메서드와 달리 서브스크립트는 읽기-쓰기 또는 읽기 전용으로 설정할 수 있다. 이 동작은 계산 프로퍼티와 마찬가지로 getter와 setter를 통해 표현된다:"}]},{"syntax":"swift","type":"codeListing","code":["subscript(index: Int) -> Int {","    get {","        \/\/ 여기에 적절한 서브스크립트 값을 반환한다.","    }","    set(newValue) {","        \/\/ 여기에 적절한 설정 작업을 수행한다.","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"newValue"},{"text":"의 타입은 서브스크립트의 반환 값과 동일하다. 계산 프로퍼티와 마찬가지로 setter의 ","type":"text"},{"type":"codeVoice","code":"(newValue)"},{"text":" 매개변수를 생략할 수 있다. 만약 직접 매개변수를 제공하지 않으면 ","type":"text"},{"code":"newValue","type":"codeVoice"},{"text":"라는 기본 매개변수가 setter에 자동으로 제공된다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"읽기 전용 계산 프로퍼티와 마찬가지로, 읽기 전용 서브스크립트의 선언을 단순화할 수 있다. "},{"code":"get","type":"codeVoice"},{"type":"text","text":" 키워드와 중괄호를 제거하면 된다:"}]},{"syntax":"swift","code":["subscript(index: Int) -> Int {","    \/\/ 여기에 적절한 서브스크립트 값을 반환한다.","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"다음은 읽기 전용 서브스크립트 구현 예제이다. 이 예제는 정수의 "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"배수 테이블을 나타내는 ","type":"text"},{"code":"TimesTable","type":"codeVoice"},{"text":" 구조체를 정의한다:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct TimesTable {","    let multiplier: Int","    subscript(index: Int) -> Int {","        return multiplier * index","    }","}","let threeTimesTable = TimesTable(multiplier: 3)","print(\"six times three is \\(threeTimesTable[6])\")","\/\/ \"six times three is 18\" 출력"],"type":"codeListing"},{"inlineContent":[{"text":"이 예제에서 ","type":"text"},{"code":"TimesTable","type":"codeVoice"},{"type":"text","text":"의 새 인스턴스를 생성해 3의 배수 테이블을 나타낸다. 인스턴스의 "},{"type":"codeVoice","code":"multiplier"},{"type":"text","text":" 매개변수로 사용할 값으로 "},{"type":"codeVoice","code":"3"},{"type":"text","text":"을 구조체의 초기화 메서드에 전달한다."}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"threeTimesTable"},{"text":" 인스턴스의 서브스크립트를 호출해 쿼리할 수 있다. 예를 들어 ","type":"text"},{"code":"threeTimesTable[6]","type":"codeVoice"},{"text":"을 호출하면 3의 배수 테이블에서 6번째 항목을 요청한다. 이 경우 ","type":"text"},{"code":"18","type":"codeVoice"},{"type":"text","text":"을 반환하며, 이는 "},{"code":"3","type":"codeVoice"},{"type":"text","text":" 곱하기 "},{"type":"codeVoice","code":"6"},{"type":"text","text":"의 결과이다."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"배수 테이블은 고정된 수학적 규칙을 기반으로 한다. 따라서 "},{"type":"codeVoice","code":"threeTimesTable[someIndex]"},{"text":"를 새 값으로 설정하는 것은 적절하지 않다. 그래서 ","type":"text"},{"code":"TimesTable","type":"codeVoice"},{"type":"text","text":"의 서브스크립트는 읽기 전용으로 정의된다."}]}],"type":"aside","name":"참고","style":"note"},{"text":"서브스크립트 사용법","level":2,"anchor":"%EC%84%9C%EB%B8%8C%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%82%AC%EC%9A%A9%EB%B2%95","type":"heading"},{"inlineContent":[{"type":"text","text":"“서브스크립트”의 정확한 의미는 사용되는 문맥에 따라 달라진다. 일반적으로 서브스크립트는 컬렉션, 리스트, 시퀀스의 멤버 엘리먼트에 접근하기 위한 단축키로 사용된다. 여러분은 특정 클래스나 구조체의 기능에 가장 적합한 방식으로 서브스크립트를 자유롭게 구현할 수 있다."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"예를 들어, Swift의 "},{"code":"Dictionary","type":"codeVoice"},{"text":" 타입은 ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" 인스턴스에 저장된 값을 설정하고 검색하기 위해 서브스크립트를 구현한다. 딕셔너리의 키 타입에 해당하는 키를 서브스크립트 대괄호 안에 제공하고, 딕셔너리의 값 타입에 해당하는 값을 서브스크립트에 할당함으로써 딕셔너리에 값을 설정할 수 있다:"}]},{"syntax":"swift","type":"codeListing","code":["var numberOfLegs = [\"spider\": 8, \"ant\": 6, \"cat\": 4]","numberOfLegs[\"bird\"] = 2"]},{"inlineContent":[{"type":"text","text":"위 예제는 "},{"type":"codeVoice","code":"numberOfLegs"},{"text":"라는 변수를 정의하고, 세 개의 키-값 쌍을 포함하는 딕셔너리 리터럴로 초기화한다. ","type":"text"},{"type":"codeVoice","code":"numberOfLegs"},{"text":" 딕셔너리의 타입은 ","type":"text"},{"type":"codeVoice","code":"[String: Int]"},{"type":"text","text":"로 추론된다. 딕셔너리를 생성한 후, 이 예제는 서브스크립트 할당을 사용해 "},{"type":"codeVoice","code":"\"bird\""},{"text":"라는 ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" 키와 "},{"type":"codeVoice","code":"2"},{"text":"라는 ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" 값을 딕셔너리에 추가한다."}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" 서브스크립트에 대한 더 자세한 정보는 "},{"type":"text","text":"doc:CollectionTypes#Accessing-and-Modifying-a-Dictionary"},{"text":"를 참고한다.","type":"text"}],"type":"paragraph"},{"name":"참고","style":"note","content":[{"inlineContent":[{"type":"text","text":"Swift의 "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" 타입은 키-값 서브스크립트를 "},{"type":"emphasis","inlineContent":[{"text":"옵셔널","type":"text"}]},{"text":" 타입을 받고 반환하는 서브스크립트로 구현한다. 위의 ","type":"text"},{"code":"numberOfLegs","type":"codeVoice"},{"type":"text","text":" 딕셔너리의 경우, 키-값 서브스크립트는 "},{"type":"codeVoice","code":"Int?"},{"type":"text","text":" 타입, 즉 “옵셔널 정수”를 받고 반환한다. "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" 타입은 모든 키가 값을 가지지 않을 수 있다는 사실을 모델링하고, 키에 대한 값을 삭제하기 위해 해당 키에 "},{"code":"nil","type":"codeVoice"},{"text":" 값을 할당할 수 있는 방법을 제공하기 위해 옵셔널 서브스크립트 타입을 사용한다.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"type":"heading","text":"서브스크립트 옵션","anchor":"%EC%84%9C%EB%B8%8C%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%98%B5%EC%85%98","level":2},{"inlineContent":[{"text":"서브스크립트는 여러 개의 입력 인자를 받을 수 있으며, 이 인자는 어떤 타입이든 가능하다. 또한 서브스크립트는 어떤 타입의 값이든 반환할 수 있다.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"함수와 마찬가지로, 서브스크립트도 가변 인자를 받거나 기본값을 설정할 수 있다. 이에 대한 자세한 내용은 "},{"type":"text","text":"doc:Functions#Variadic-Parameters"},{"text":"와 ","type":"text"},{"text":"doc:Functions#Default-Parameter-Values","type":"text"},{"text":"에서 다룬다. 하지만 함수와 달리, 서브스크립트는 in-out 인자를 사용할 수 없다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"클래스나 구조체는 필요한 만큼 서브스크립트를 정의할 수 있다. 이때, 서브스크립트 대괄호 안에 포함된 값의 타입을 기반으로 적절한 서브스크립트를 추론한다. 이러한 여러 서브스크립트를 정의하는 방식을 "},{"type":"emphasis","inlineContent":[{"text":"서브스크립트 오버로딩","type":"text"}]},{"type":"text","text":"이라고 한다."}]},{"inlineContent":[{"type":"text","text":"서브스크립트가 단일 인자를 받는 것이 일반적이지만, 타입에 적합하다면 여러 인자를 받는 서브스크립트를 정의할 수도 있다. 다음 예제는 "},{"code":"Double","type":"codeVoice"},{"type":"text","text":" 값으로 이루어진 2차원 행렬을 나타내는 "},{"code":"Matrix","type":"codeVoice"},{"type":"text","text":" 구조체를 정의한다. 이 "},{"type":"codeVoice","code":"Matrix"},{"type":"text","text":" 구조체의 서브스크립트는 두 개의 정수 인자를 받는다:"}],"type":"paragraph"},{"type":"codeListing","code":["struct Matrix {","    let rows: Int, columns: Int","    var grid: [Double]","    init(rows: Int, columns: Int) {","        self.rows = rows","        self.columns = columns","        grid = Array(repeating: 0.0, count: rows * columns)","    }","    func indexIsValid(row: Int, column: Int) -> Bool {","        return row >= 0 && row < rows && column >= 0 && column < columns","    }","    subscript(row: Int, column: Int) -> Double {","        get {","            assert(indexIsValid(row: row, column: column), \"Index out of range\")","            return grid[(row * columns) + column]","        }","        set {","            assert(indexIsValid(row: row, column: column), \"Index out of range\")","            grid[(row * columns) + column] = newValue","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Matrix"},{"text":"는 ","type":"text"},{"type":"codeVoice","code":"rows"},{"type":"text","text":"와 "},{"code":"columns","type":"codeVoice"},{"type":"text","text":" 두 개의 인자를 받는 초기화 메서드를 제공한다. 이 초기화 메서드는 "},{"type":"codeVoice","code":"rows * columns"},{"text":" 크기의 ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" 타입 배열을 생성한다. 행렬의 각 위치는 ","type":"text"},{"type":"codeVoice","code":"0.0"},{"text":"으로 초기화된다. 이를 위해 배열의 크기와 초기값 ","type":"text"},{"type":"codeVoice","code":"0.0"},{"type":"text","text":"을 배열 초기화 메서드에 전달한다. 이 초기화 메서드에 대한 자세한 내용은 "},{"text":"doc:CollectionTypes#Creating-an-Array-with-a-Default-Value","type":"text"},{"type":"text","text":"에서 확인할 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"초기화 메서드에 적절한 행과 열의 수를 전달해 새로운 "},{"type":"codeVoice","code":"Matrix"},{"type":"text","text":" 인스턴스를 생성할 수 있다:"}]},{"code":["var matrix = Matrix(rows: 2, columns: 2)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"위 예제는 두 행과 두 열로 이루어진 새로운 "},{"type":"codeVoice","code":"Matrix"},{"text":" 인스턴스를 생성한다. 이 ","type":"text"},{"code":"Matrix","type":"codeVoice"},{"type":"text","text":" 인스턴스의 "},{"type":"codeVoice","code":"grid"},{"text":" 배열은 행렬을 왼쪽 위에서 오른쪽 아래로 읽은 평면화된 형태다:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"subscriptMatrix01"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"행렬의 값은 행과 열 값을 쉼표로 구분해 서브스크립트에 전달함으로써 설정할 수 있다:"}]},{"syntax":"swift","code":["matrix[0, 1] = 1.5","matrix[1, 0] = 3.2"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"이 두 문장은 서브스크립트의 설정자를 호출해 행렬의 오른쪽 위 위치("},{"type":"codeVoice","code":"row"},{"text":"가 ","type":"text"},{"code":"0","type":"codeVoice"},{"text":", ","type":"text"},{"code":"column","type":"codeVoice"},{"type":"text","text":"이 "},{"code":"1","type":"codeVoice"},{"type":"text","text":")에 "},{"type":"codeVoice","code":"1.5"},{"type":"text","text":"를, 왼쪽 아래 위치("},{"type":"codeVoice","code":"row"},{"type":"text","text":"가 "},{"type":"codeVoice","code":"1"},{"text":", ","type":"text"},{"type":"codeVoice","code":"column"},{"type":"text","text":"이 "},{"code":"0","type":"codeVoice"},{"type":"text","text":")에 "},{"type":"codeVoice","code":"3.2"},{"text":"를 설정한다:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"subscriptMatrix02"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Matrix"},{"type":"text","text":" 서브스크립트의 getter와 setter는 모두 "},{"code":"row","type":"codeVoice"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"column"},{"type":"text","text":" 값이 유효한지 확인하기 위해 assertion을 포함한다. 이를 돕기 위해 "},{"type":"codeVoice","code":"Matrix"},{"type":"text","text":"는 "},{"type":"codeVoice","code":"indexIsValid(row:column:)"},{"type":"text","text":"이라는 편의 메서드를 제공한다. 이 메서드는 요청된 "},{"code":"row","type":"codeVoice"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"column"},{"type":"text","text":"이 행렬의 범위 내에 있는지 확인한다:"}]},{"type":"codeListing","syntax":"swift","code":["func indexIsValid(row: Int, column: Int) -> Bool {","    return row >= 0 && row < rows && column >= 0 && column < columns","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"행렬 범위를 벗어나는 서브스크립트에 접근하려고 하면 assertion이 발생한다:"}]},{"type":"codeListing","syntax":"swift","code":["let someValue = matrix[2, 2]","\/\/ [2, 2]는 행렬 범위를 벗어나므로 assertion이 발생한다."]},{"type":"heading","level":2,"text":"타입 서브스크립트","anchor":"%ED%83%80%EC%9E%85-%EC%84%9C%EB%B8%8C%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8"},{"type":"paragraph","inlineContent":[{"text":"앞서 설명한 인스턴스 서브스크립트는 특정 타입의 인스턴스에서 호출하는 서브스크립트이다. 반면, 타입 자체에서 호출하는 서브스크립트도 정의할 수 있다. 이를 ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"타입 서브스크립트","type":"text"}]},{"type":"text","text":"라고 한다. 타입 서브스크립트를 정의할 때는 "},{"code":"subscript","type":"codeVoice"},{"type":"text","text":" 키워드 앞에 "},{"type":"codeVoice","code":"static"},{"text":" 키워드를 붙인다. 클래스의 경우 ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":" 키워드를 사용해 서브클래스가 슈퍼클래스의 서브스크립트 구현을 재정의할 수 있도록 허용한다. 아래 예제는 타입 서브스크립트를 정의하고 호출하는 방법을 보여준다:"}]},{"type":"codeListing","syntax":"swift","code":["enum Planet: Int {","    case mercury = 1, venus, earth, mars, jupiter, saturn, uranus, neptune","    static subscript(n: Int) -> Planet {","        return Planet(rawValue: n)!","    }","}","let mars = Planet[4]","print(mars)"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"]]},"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","interfaceLanguage":"swift"},"kind":"article","metadata":{"title":"서브스크립트"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"컬렉션의 요소에 접근할 때 사용한다."}],"references":{"subscriptMatrix02":{"identifier":"subscriptMatrix02","alt":null,"variants":[{"traits":["2x","light"],"url":"\/images\/org.swift.tspl\/subscriptMatrix02@2x.png"},{"url":"\/images\/org.swift.tspl\/subscriptMatrix02~dark@2x.png","traits":["2x","dark"]}],"type":"image"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language":{"title":"The Swift Programming Language (6.1)","abstract":[],"kind":"article","role":"collection","type":"topic","url":"\/documentation\/the-swift-programming-language","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"},"subscriptMatrix01":{"variants":[{"traits":["2x","light"],"url":"\/images\/org.swift.tspl\/subscriptMatrix01@2x.png"},{"traits":["2x","dark"],"url":"\/images\/org.swift.tspl\/subscriptMatrix01~dark@2x.png"}],"alt":null,"identifier":"subscriptMatrix01","type":"image"}}}